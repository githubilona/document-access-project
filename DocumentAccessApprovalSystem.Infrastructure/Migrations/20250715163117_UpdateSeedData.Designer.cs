// <auto-generated />
using System;
using DocumentAccessApprovalSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DocumentAccessApprovalSystem.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250715163117_UpdateSeedData")]
    partial class UpdateSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("DocumentAccessApprovalSystem.Domain.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Classification")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Classification = "Internal",
                            Description = "BankApp project documentatation",
                            Name = "Project_documentation.docx"
                        },
                        new
                        {
                            Id = 2,
                            Classification = "Confidential",
                            Description = "Q4 financial report",
                            Name = "Quarterly_Report.xlsx"
                        },
                        new
                        {
                            Id = 3,
                            Classification = "Internal",
                            Description = "Human resources policies and procedures",
                            Name = ""
                        });
                });

            modelBuilder.Entity("DocumentAccessApprovalSystem.Domain.Entities.AccessRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("DocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RequestedAccessType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AccessRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 15, 18, 31, 16, 801, DateTimeKind.Local).AddTicks(4206),
                            DocumentId = 1,
                            Reason = "review finanical report ",
                            RequestedAccessType = 0,
                            Status = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 15, 18, 31, 16, 801, DateTimeKind.Local).AddTicks(4465),
                            DocumentId = 2,
                            Reason = "edit financial report",
                            RequestedAccessType = 1,
                            Status = 0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("DocumentAccessApprovalSystem.Domain.Entities.Decision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApproverId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DecidedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccessRequestId")
                        .IsUnique();

                    b.ToTable("Decisions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessRequestId = 1,
                            ApproverId = 2,
                            Comment = "Approved - Access granted for project review",
                            DecidedAt = new DateTime(2025, 7, 15, 18, 31, 16, 801, DateTimeKind.Local).AddTicks(6094),
                            IsApproved = true
                        },
                        new
                        {
                            Id = 2,
                            AccessRequestId = 2,
                            ApproverId = 2,
                            Comment = "Rejected -  user not allowed",
                            DecidedAt = new DateTime(2025, 7, 15, 18, 31, 16, 801, DateTimeKind.Local).AddTicks(6345),
                            IsApproved = false
                        });
                });

            modelBuilder.Entity("DocumentAccessApprovalSystem.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 15, 18, 31, 16, 798, DateTimeKind.Local).AddTicks(2027),
                            Email = "user@user.com",
                            Name = "user",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 15, 18, 31, 16, 800, DateTimeKind.Local).AddTicks(5176),
                            Email = "approver@approver.com",
                            Name = "approver",
                            Role = 1
                        });
                });

            modelBuilder.Entity("DocumentAccessApprovalSystem.Domain.Entities.Decision", b =>
                {
                    b.HasOne("DocumentAccessApprovalSystem.Domain.Entities.AccessRequest", null)
                        .WithOne("Decision")
                        .HasForeignKey("DocumentAccessApprovalSystem.Domain.Entities.Decision", "AccessRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocumentAccessApprovalSystem.Domain.Entities.AccessRequest", b =>
                {
                    b.Navigation("Decision");
                });
#pragma warning restore 612, 618
        }
    }
}
